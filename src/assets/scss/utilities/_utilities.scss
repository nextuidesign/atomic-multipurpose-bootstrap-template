//
// utilities.scss
// Extended from Bootstrap
//
@import "../../../../../../../node_modules/bootstrap/scss/functions";
@import "../../../../../../../node_modules/bootstrap/scss/variables";
@import "../../../../../../../node_modules/bootstrap/scss/maps";
@import "../../../../../../../node_modules/bootstrap/scss/mixins";
@import "../../../../../../../node_modules/bootstrap/scss/utilities";

$utilities: () !default;
$utilities: map-merge(
    $utilities,
    (
        "grid-rows": (
            property: grid-row,
            class: grid-row,
            responsive: true,
            values: (
                auto: auto,
                1: 1,
                2: 2,
                3: 3,
                4: 4,
                5: 5,
                6: 6,
                7: 7,
                8: 8,
                9: 9,
                10: 10,
                11: 11,
                12: 12
            )
        ),
        "grid-cols": (
            property: grid-template-columns,
            class: grid-cols,
            responsive: true,
            values: (
                1: repeat(1, minmax(0, 1fr)),
                2: repeat(2, minmax(0, 1fr)),
                3: repeat(3, minmax(0, 1fr)),
                4: repeat(4, minmax(0, 1fr)),
                5: repeat(5, minmax(0, 1fr)),
                6: repeat(6, minmax(0, 1fr)),
                7: repeat(7, minmax(0, 1fr)),
                8: repeat(8, minmax(0, 1fr)),
                9: repeat(9, minmax(0, 1fr)),
                10: repeat(10, minmax(0, 1fr)),
                11: repeat(11, minmax(0, 1fr)),
                12: repeat(12, minmax(0, 1fr)),
                none: none,
                subgrid: subgrid
            )
        ),
        // scss-docs-end utils-borders
        // Sizing utilities
        // scss-docs-start utils-sizing
        "width": (
            property: width,
            class: w,
            responsive: true,
            values: (
                10: 10%,
                20: 20%,
                25: 25%,
                30: 30%,
                33: 33.33%,
                40: 40%,
                45: 45%,
                50: 50%,
                60: 60%,
                65: 65%,
                70: 70%,
                75: 75%,
                80: 80%,
                90: 90%,
                100: 100%,
                auto: auto
            )
        ),
        "max-width": (
            property: max-width,
            class: mw,
            responsive: true,
            values: (100: 100%)
        ),
        "viewport-width": (
            property: width,
            class: vw,
            responsive: true,
            values: (100: 100vw)
        ),
        "min-viewport-width": (
            property: min-width,
            class: min-vw,
            responsive: true,
            values: (100: 100vw)
        ),
        "height": (
            property: height,
            class: h,
            responsive: true,
            values: (
                10: 10%,
                20: 20%,
                25: 25%,
                30: 30%,
                33: 33.33%,
                40: 40%,
                45: 45%,
                50: 50%,
                60: 60%,
                65: 65%,
                70: 70%,
                75: 75%,
                80: 80%,
                90: 90%,
                100: 100%,
                auto: auto
            )
        ),
        "max-height": (
            property: max-height,
            class: mh,
            responsive: true,
            values: (100: 100%)
        ),
        "viewport-height": (
            property: height,
            class: vh,
            responsive: true,
            values: (100: 100vh)
        ),
        "min-viewport-height": (
            property: min-height,
            class: min-vh,
            responsive: true,
            values: (100: 100vh)
        ),
        "gap-y": (
            property: row-gap,
            class: gap-y,
            responsive: true,
            values: map-merge($spacers, (1: 1px))
        ),
        "gap-x": (
            property: column-gap,
            class: gap-x,
            responsive: true,
            values: map-merge($spacers, (1: 1px))
        ),
        "line-height": (
            property: line-height,
            class: lh,
            responsive: true,
            values: (
                sm: 125%,
                null: 150%,
                md: 165%
            )
        ),
        "color": (
            property: color,
            class: text,
            state: hover,
            local-vars: (
                "text-opacity": 1
            ),
            values: map-merge(
                $utilities-text-colors,
                (
                    "muted": var(--#{$prefix}secondary-color), // deprecated
                    "black-50": rgba($black, .5), // deprecated
                    "white-50": rgba($white, .5), // deprecated
                    "body-secondary": var(--#{$prefix}secondary-color),
                    "body-tertiary": var(--#{$prefix}tertiary-color),
                    "body-emphasis": var(--#{$prefix}emphasis-color),
                    "reset": inherit,
                    "white": var(--#{$prefix}white),
                    "gray-50": var(--#{$prefix}gray-50),
                    "gray-100": var(--#{$prefix}gray-100),
                    "gray-200": var(--#{$prefix}gray-200),
                    "gray-300": var(--#{$prefix}gray-300),
                    "gray-400": var(--#{$prefix}gray-400),
                    "gray-500": var(--#{$prefix}gray-500),
                    "gray-600": var(--#{$prefix}gray-600),
                    "gray-700": var(--#{$prefix}gray-700),
                    "gray-800": var(--#{$prefix}gray-800),
                    "gray-900": var(--#{$prefix}$gray-900)
                )
            )
        ),
        "background-color": (
            property: background-color,
            class: bg,
            state: hover,
            local-vars: (
                "bg-opacity": 1
            ),
            values: map-merge(
                $utilities-bg-colors,
                (
                    "transparent": transparent,
                    "body-secondary": rgba(var(--#{$prefix}secondary-bg-rgb), var(--#{$prefix}bg-opacity)),
                    "body-tertiary": rgba(var(--#{$prefix}tertiary-bg-rgb), var(--#{$prefix}bg-opacity)),
                    "gray": #F5F7F9,
                    "smooth-gray": #FAFBFD,
                    "gray-50": $gray-50,
                    "gray-100": $gray-100,
                    "gray-200": $gray-200,
                    "gray-300": $gray-300,
                    "gray-400": $gray-400,
                    "gray-500": $gray-500,
                    "gray-600": $gray-600,
                    "gray-700": $gray-700,
                    "gray-800": $gray-800,
                    "gray-900": $gray-900
                )
            )
        ),
        "bg-opacity": (
            css-var: true,
            class: bg-opacity,
            values: (
                10: .1,
                20: .2,
                25: .25,
                30: .3,
                40: .4,
                50: .5,
                60: .6,
                70: .7,
                75: .75,
                80: .8,
                90: .9,
                100: 1
            )
        ),
        "border": (
            property: border,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
                0: 0,
            )
        ),
        "border-width": (
            property: border-width,
            responsive: true,
            class: border,
            values: $border-widths
        ),
        "border-color": (
            property: border-color,
            class: border,
            state: hover,
            local-vars: (
                "border-opacity": 1
            ),
            values: map-merge($utilities-border-colors, $grays)
        ),
        "border-top": (
            property: border-top,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
                0: 0,
            )
        ),
        "border-end": (
            property: border-right,
            responsive: true,
            class: border-end,
            values: (
                null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
                0: 0,
            )
        ),
        "border-bottom": (
            property: border-bottom,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
                0: 0,
            )
        ),
        "border-start": (
            property: border-left,
            class: border-start,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
                0: 0,
            )
        ),
        // scss-docs-end utils-opacity
        // scss-docs-start utils-overflow
        "overflow": (
            property: overflow,
            responsive: true,
            values: auto hidden visible scroll,
        ),
        "overflow-x": (
            property: overflow-x,
            responsive: true,
            values: auto hidden visible scroll,
        ),
        "overflow-y": (
            property: overflow-y,
            responsive: true,
            values: auto hidden visible scroll,
        ),
        "z-index": (
            property: z-index,
            class: z,
            responsive: true,
            values: (
                0: 0,
                1: 1,
                2: 2,
                3: 3,
                4: 4,
                5: 5,
            ),
        ),
        "rounded": (
            property: border-radius,
            class: rounded,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-top": (
            property: border-top-left-radius border-top-right-radius,
            class: rounded-top,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-end": (
            property: border-top-right-radius border-bottom-right-radius,
            class: rounded-end,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-bottom": (
            property: border-bottom-right-radius border-bottom-left-radius,
            class: rounded-bottom,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-start": (
            property: border-bottom-left-radius border-top-left-radius,
            class: rounded-start,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-top-start": (
            property: border-top-left-radius,
            class: rounded-top-start,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-top-end": (
            property: border-top-right-radius,
            class: rounded-top-end,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-bottom-start": (
            property: border-bottom-left-radius,
            class: rounded-bottom-start,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "rounded-bottom-end": (
            property: border-bottom-right-radius,
            class: rounded-bottom-end,
            responsive: true,
            values: (
                null: var(--#{$prefix}border-radius),
                0: 0,
                1: var(--#{$prefix}border-radius-sm),
                2: var(--#{$prefix}border-radius),
                3: var(--#{$prefix}border-radius-lg),
                4: var(--#{$prefix}border-radius-xl),
                5: var(--#{$prefix}border-radius-2xl),
                6: var(--#{$prefix}border-radius-3xl),
                circle: 50%,
                pill: var(--#{$prefix}border-radius-pill)
            )
        ),
        "fill": (
            property: fill,
            responsive: true,
            state: hover,
            values: map-merge(
                $theme-colors,
                (
                    none: none,
                    inherit: inherit,
                    current: currentColor,
                    transparent: transparent,
                    "gray-50": $gray-50,
                    "gray-100": $gray-100,
                    "gray-200": $gray-200,
                    "gray-300": $gray-300,
                    "gray-400": $gray-400,
                    "gray-500": $gray-500,
                    "gray-600": $gray-600,
                    "gray-700": $gray-700,
                    "gray-800": $gray-800,
                    "gray-900": $gray-900
                )
            )
        ),
        "stroke": (
            property: stroke,
            responsive: true,
            state: hover,
            values: map-merge(
                $theme-colors,
                (
                    none: none,
                    inherit: inherit,
                    current: currentColor,
                    transparent: transparent,
                    "gray-50": $gray-50,
                    "gray-100": $gray-100,
                    "gray-200": $gray-200,
                    "gray-300": $gray-300,
                    "gray-400": $gray-400,
                    "gray-500": $gray-500,
                    "gray-600": $gray-600,
                    "gray-700": $gray-700,
                    "gray-800": $gray-800,
                    "gray-900": $gray-900
                )
            )
        ),
        "stroke-width": (
            property: stroke-width,
            class: stroke,
            responsive: true,
            state: hover,
            values: ( 0 1 2 3 4 5 6 )
        ),
        "cursor": (
            property: cursor,
            values: (
                auto: auto,
                default: default,
                pointer: pointer,
                wait: wait,
                text: text,
                move: move,
                help: help,
                not-allowed: not-allowed,
                none: none,
                context-menu: context-menu,
                progress: progress,
                cell: cell,
                crosshair: crosshair,
                vertical-text: vertical-text,
                alias: alias,
                copy: copy,
                no-drop: no-drop,
                grab: grab,
                grabbing: grabbing,
            )
        ),
        "background-size": (
            property: background-size,
            class: bg,
            values: (
                auto: auto,
                cover: cover,
                contain: contain,
            )
        ),
        "background-repeat": (
            property: background-repeat,
            class: bg,
            values: (
                repeat: repeat,
                no-repeat: no-repeat,
                repeat-x: repeat-x,
                repeat-y: repeat-y,
                repeat-round: round,
                repeat-space: space,
            )
        ),
        "background-position": (
            property: background-position,
            class: bg,
            values: (
                bottom: bottom,
                center: center,
                start: left,
                start-bottom: left bottom,
                start-top: left top,
                end: right,
                end-bottom: right bottom,
                end-top: right top,
                top: top,
            )
        ),
        "position": (
            property: position,
            responsive: true,
            values: static relative absolute fixed sticky
        ),
    )
);

@import "../../../../../../../node_modules/bootstrap/scss/utilities/api";
